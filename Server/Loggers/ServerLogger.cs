///////////////////////////////////////////////////////////
//  ServerLogger.cs
//  Implementation of the Class ServerLogger
//  Generated by Enterprise Architect
//  Created on:      30-Jul-2020 3:54:25 PM
//  Original author: Predrag
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Common.Contracts;

namespace Server.Loggers
{
    public class ServerLogger : ILogging
    {

        private static ServerLogger instance;
        private static log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        public static ServerLogger GetOrCreate()
        {

            if (instance == null) instance = new ServerLogger();

            return instance;
        }

        /// 
        /// <param name="message"></param>
        /// <param name="logType"></param>
        public void LogNewMessage(string message, LogType logType)
        {
            switch (logType)
            {
                case LogType.INFO:
                    log.Info(message);
                    break;
                case LogType.DEBUG:
                    log.Debug(message);
                    break;
                case LogType.ERROR:
                    log.Error(message);
                    break;
                case LogType.WARNING:
                    log.Warn(message);
                    break;
            }

        }

    }//end ServerLogger

}